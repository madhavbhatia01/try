{"remainingRequest":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue","mtime":1623696085006},{"path":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwppbXBvcnQgRGF0YVRpdGxlIGZyb20gJ0AvY29tcG9uZW50cy9EYXRhVGl0bGUnCmltcG9ydCBEYXRhQm94ZXMgZnJvbSAnQC9jb21wb25lbnRzL0RhdGFCb3hlcycKaW1wb3J0IENvdW50cnlTZWxlY3QgZnJvbSAnQC9jb21wb25lbnRzL0NvdW50cnlTZWxlY3QnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudHM6IHsKICAgIERhdGFUaXRsZSwKICAgIERhdGFCb3hlcywKICAgIENvdW50cnlTZWxlY3QKICB9LAogIGRhdGEoKXsKICAgIHJldHVybnsKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgdGl0bGU6ICdHbG9iYWwnLAogICAgICBkYXRhRGF0ZTogJycsCiAgICAgIHN0YXRzOiB7fSwKICAgICAgY291bnRyaWVzOiBbXSwKICAgICAgbG9hZGluZ0ltYWdlOiByZXF1aXJlKCcuLi9hc3NldHMvaG91cmdsYXNzLmdpZicpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmZXRjaERhdGEoKXsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3N1bW1hcnknKQogICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKQogICAgICByZXR1cm4gZGF0YQogICAgfSwKICAgIGdldENvdW50cnlEYXRhKGNvdW50cnkpewogICAgICB0aGlzLnN0YXRzID0gY291bnRyeQogICAgICB0aGlzLnRpdGxlID0gY291bnRyeS5Db3VudHJ5CiAgICB9LAogICAgYXN5bmMgY2xlYXJDb3VudHJ5RGF0YSgpewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5mZXRjaERhdGEoKTsKICAgICAgdGhpcy50aXRsZSA9ICdHbG9iYWwnOwogICAgICB0aGlzLnN0YXRzID0gZGF0YS5HbG9iYWw7CiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwoKICAgIH0KICB9LAogIGFzeW5jIGNyZWF0ZWQoKXsKICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLmZldGNoRGF0YSgpCiAgICAKICAgIHRoaXMuZGF0YURhdGUgPSBkYXRhLkRhdGU7CiAgICB0aGlzLnN0YXRzID0gZGF0YS5HbG9iYWw7CiAgICB0aGlzLmNvdW50cmllcyA9IGRhdGEuQ291bnRyaWVzOwogICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgfQp9Cg=="},{"version":3,"sources":["/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue"],"names":[],"mappings":"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","file":"/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <main v-if=\"!loading\" class=\"mb-10\">\n    <DataTitle :text=\"title\" :dataDate=\"dataDate\" />\n\n    <DataBoxes :stats=\"stats\" />\n\n    <CountrySelect @get-country=\"getCountryData\" :countries=\"countries\" />\n\n    <div class=\"text-center\">\n      <button @click=\"clearCountryData\" v-if=\"stats.Country\" class=\"bg-gray-700 text-white mt-6 p-3 rounded hover:bg-gray-600\">\n        Clear Country\n      </button>\n    </div>\n    \n  </main>\n  <main class=\"flex flex-col align-center justify-center text-center\" v-else>\n    <div class=\"text-3xl text-gray-500 mt-10 mb-6 font-mono\">\n      Fetching Data\n    </div>\n    <img :src=\"loadingImage\" class=\"w-24 m-auto\" alt=\"\">\n  </main>\n</template>\n\n<script>\n// @ is an alias to /src\nimport DataTitle from '@/components/DataTitle'\nimport DataBoxes from '@/components/DataBoxes'\nimport CountrySelect from '@/components/CountrySelect'\n\nexport default {\n  name: 'Home',\n  components: {\n    DataTitle,\n    DataBoxes,\n    CountrySelect\n  },\n  data(){\n    return{\n      loading: true,\n      title: 'Global',\n      dataDate: '',\n      stats: {},\n      countries: [],\n      loadingImage: require('../assets/hourglass.gif')\n    }\n  },\n  methods: {\n    async fetchData(){\n      const res = await fetch('https://api.covid19api.com/summary')\n      const data = await res.json()\n      return data\n    },\n    getCountryData(country){\n      this.stats = country\n      this.title = country.Country\n    },\n    async clearCountryData(){\n      this.loading = true;\n      const data = await this.fetchData();\n      this.title = 'Global';\n      this.stats = data.Global;\n      this.loading = false;\n\n    }\n  },\n  async created(){\n    const data = await this.fetchData()\n    \n    this.dataDate = data.Date;\n    this.stats = data.Global;\n    this.countries = data.Countries;\n    this.loading = false;\n  }\n}\n</script>\n"]}]}
{"remainingRequest":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue?vue&type=template&id=0b471682","dependencies":[{"path":"/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue","mtime":1623696085006},{"path":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/madhav/Desktop/web development/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPG1haW4gdi1pZj0iIWxvYWRpbmciIGNsYXNzPSJtYi0xMCI+CiAgICA8RGF0YVRpdGxlIDp0ZXh0PSJ0aXRsZSIgOmRhdGFEYXRlPSJkYXRhRGF0ZSIgLz4KCiAgICA8RGF0YUJveGVzIDpzdGF0cz0ic3RhdHMiIC8+CgogICAgPENvdW50cnlTZWxlY3QgQGdldC1jb3VudHJ5PSJnZXRDb3VudHJ5RGF0YSIgOmNvdW50cmllcz0iY291bnRyaWVzIiAvPgoKICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgPGJ1dHRvbiBAY2xpY2s9ImNsZWFyQ291bnRyeURhdGEiIHYtaWY9InN0YXRzLkNvdW50cnkiIGNsYXNzPSJiZy1ncmF5LTcwMCB0ZXh0LXdoaXRlIG10LTYgcC0zIHJvdW5kZWQgaG92ZXI6YmctZ3JheS02MDAiPgogICAgICAgIENsZWFyIENvdW50cnkKICAgICAgPC9idXR0b24+CiAgICA8L2Rpdj4KICAgIAogIDwvbWFpbj4KICA8bWFpbiBjbGFzcz0iZmxleCBmbGV4LWNvbCBhbGlnbi1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC1jZW50ZXIiIHYtZWxzZT4KICAgIDxkaXYgY2xhc3M9InRleHQtM3hsIHRleHQtZ3JheS01MDAgbXQtMTAgbWItNiBmb250LW1vbm8iPgogICAgICBGZXRjaGluZyBEYXRhCiAgICA8L2Rpdj4KICAgIDxpbWcgOnNyYz0ibG9hZGluZ0ltYWdlIiBjbGFzcz0idy0yNCBtLWF1dG8iIGFsdD0iIj4KICA8L21haW4+Cg=="},{"version":3,"sources":["/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;IAE/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;IAE3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;IAErE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACttH,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/madhav/Desktop/web development/covid-tracker/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <main v-if=\"!loading\" class=\"mb-10\">\n    <DataTitle :text=\"title\" :dataDate=\"dataDate\" />\n\n    <DataBoxes :stats=\"stats\" />\n\n    <CountrySelect @get-country=\"getCountryData\" :countries=\"countries\" />\n\n    <div class=\"text-center\">\n      <button @click=\"clearCountryData\" v-if=\"stats.Country\" class=\"bg-gray-700 text-white mt-6 p-3 rounded hover:bg-gray-600\">\n        Clear Country\n      </button>\n    </div>\n    \n  </main>\n  <main class=\"flex flex-col align-center justify-center text-center\" v-else>\n    <div class=\"text-3xl text-gray-500 mt-10 mb-6 font-mono\">\n      Fetching Data\n    </div>\n    <img :src=\"loadingImage\" class=\"w-24 m-auto\" alt=\"\">\n  </main>\n</template>\n\n<script>\n// @ is an alias to /src\nimport DataTitle from '@/components/DataTitle'\nimport DataBoxes from '@/components/DataBoxes'\nimport CountrySelect from '@/components/CountrySelect'\n\nexport default {\n  name: 'Home',\n  components: {\n    DataTitle,\n    DataBoxes,\n    CountrySelect\n  },\n  data(){\n    return{\n      loading: true,\n      title: 'Global',\n      dataDate: '',\n      stats: {},\n      countries: [],\n      loadingImage: require('../assets/hourglass.gif')\n    }\n  },\n  methods: {\n    async fetchData(){\n      const res = await fetch('https://api.covid19api.com/summary')\n      const data = await res.json()\n      return data\n    },\n    getCountryData(country){\n      this.stats = country\n      this.title = country.Country\n    },\n    async clearCountryData(){\n      this.loading = true;\n      const data = await this.fetchData();\n      this.title = 'Global';\n      this.stats = data.Global;\n      this.loading = false;\n\n    }\n  },\n  async created(){\n    const data = await this.fetchData()\n    \n    this.dataDate = data.Date;\n    this.stats = data.Global;\n    this.countries = data.Countries;\n    this.loading = false;\n  }\n}\n</script>\n"]}]}